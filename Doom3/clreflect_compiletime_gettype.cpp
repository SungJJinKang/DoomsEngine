// b95ccd1d
// Generated by clmerge.exe - do not edit!
#include <clcpp/clcpp.h>

// Array of type name pointers
static const int clcppNbTypes = 275;
static const clcpp::Type* clcppTypePtrs[clcppNbTypes] = { 0 };

void clcppInitGetType(const clcpp::Database* db)
{
	// Populate the type pointer array if a database is specified
	if (db != 0)
	{
		clcppTypePtrs[0] = db->GetType(0x5fd8d2d);
		clcppTypePtrs[1] = db->GetType(0x67532de);
		clcppTypePtrs[2] = db->GetType(0x97c809e);
		clcppTypePtrs[3] = db->GetType(0x9a2d2ca);
		clcppTypePtrs[4] = db->GetType(0xa179945);
		clcppTypePtrs[5] = db->GetType(0xa615da8);
		clcppTypePtrs[6] = db->GetType(0xb9bcc14);
		clcppTypePtrs[7] = db->GetType(0xbed7cfc);
		clcppTypePtrs[8] = db->GetType(0xc5aa46c);
		clcppTypePtrs[9] = db->GetType(0xfb7e02c);
		clcppTypePtrs[10] = db->GetType(0x1063c692);
		clcppTypePtrs[11] = db->GetType(0x125f434c);
		clcppTypePtrs[12] = db->GetType(0x145687e2);
		clcppTypePtrs[13] = db->GetType(0x14753a4f);
		clcppTypePtrs[14] = db->GetType(0x169b719d);
		clcppTypePtrs[15] = db->GetType(0x16f3a261);
		clcppTypePtrs[16] = db->GetType(0x186680c9);
		clcppTypePtrs[17] = db->GetType(0x1910582a);
		clcppTypePtrs[18] = db->GetType(0x1ba086b8);
		clcppTypePtrs[19] = db->GetType(0x1d7a8b94);
		clcppTypePtrs[20] = db->GetType(0x1e15a1e0);
		clcppTypePtrs[21] = db->GetType(0x1f19850a);
		clcppTypePtrs[22] = db->GetType(0x20436356);
		clcppTypePtrs[23] = db->GetType(0x24c8a7ae);
		clcppTypePtrs[24] = db->GetType(0x24e20d1a);
		clcppTypePtrs[25] = db->GetType(0x2519fdd3);
		clcppTypePtrs[26] = db->GetType(0x266f2e4d);
		clcppTypePtrs[27] = db->GetType(0x26ae2b99);
		clcppTypePtrs[28] = db->GetType(0x274dd6a8);
		clcppTypePtrs[29] = db->GetType(0x2778a408);
		clcppTypePtrs[30] = db->GetType(0x29aabd56);
		clcppTypePtrs[31] = db->GetType(0x2b46a30e);
		clcppTypePtrs[32] = db->GetType(0x2d776ba1);
		clcppTypePtrs[33] = db->GetType(0x2e8e891e);
		clcppTypePtrs[34] = db->GetType(0x2e9e1f59);
		clcppTypePtrs[35] = db->GetType(0x2ef7ed9e);
		clcppTypePtrs[36] = db->GetType(0x2ffa1448);
		clcppTypePtrs[37] = db->GetType(0x307a1559);
		clcppTypePtrs[38] = db->GetType(0x31180e43);
		clcppTypePtrs[39] = db->GetType(0x328e3300);
		clcppTypePtrs[40] = db->GetType(0x34e6130d);
		clcppTypePtrs[41] = db->GetType(0x3506476e);
		clcppTypePtrs[42] = db->GetType(0x354624ca);
		clcppTypePtrs[43] = db->GetType(0x3657571a);
		clcppTypePtrs[44] = db->GetType(0x36f394dc);
		clcppTypePtrs[45] = db->GetType(0x37dd3f31);
		clcppTypePtrs[46] = db->GetType(0x38d55358);
		clcppTypePtrs[47] = db->GetType(0x393cf179);
		clcppTypePtrs[48] = db->GetType(0x397547b2);
		clcppTypePtrs[49] = db->GetType(0x39a843d9);
		clcppTypePtrs[50] = db->GetType(0x39e598f9);
		clcppTypePtrs[51] = db->GetType(0x3a6c9e3f);
		clcppTypePtrs[52] = db->GetType(0x3aaedfbb);
		clcppTypePtrs[53] = db->GetType(0x3b66e81d);
		clcppTypePtrs[54] = db->GetType(0x3c90b99d);
		clcppTypePtrs[55] = db->GetType(0x3c9a2a8f);
		clcppTypePtrs[56] = db->GetType(0x3e6d00ed);
		clcppTypePtrs[57] = db->GetType(0x3f4a8b5a);
		clcppTypePtrs[58] = db->GetType(0x3fdc0620);
		clcppTypePtrs[59] = db->GetType(0x3fe57f5f);
		clcppTypePtrs[60] = db->GetType(0x42c07598);
		clcppTypePtrs[61] = db->GetType(0x43842ded);
		clcppTypePtrs[62] = db->GetType(0x439b314d);
		clcppTypePtrs[63] = db->GetType(0x44168f69);
		clcppTypePtrs[64] = db->GetType(0x4507615d);
		clcppTypePtrs[65] = db->GetType(0x450ebcac);
		clcppTypePtrs[66] = db->GetType(0x45b8ef4d);
		clcppTypePtrs[67] = db->GetType(0x45da4c2b);
		clcppTypePtrs[68] = db->GetType(0x46b4d2c2);
		clcppTypePtrs[69] = db->GetType(0x4727c423);
		clcppTypePtrs[70] = db->GetType(0x47d7aa3c);
		clcppTypePtrs[71] = db->GetType(0x47dab4d0);
		clcppTypePtrs[72] = db->GetType(0x48696a01);
		clcppTypePtrs[73] = db->GetType(0x49f0da96);
		clcppTypePtrs[74] = db->GetType(0x4d2588ad);
		clcppTypePtrs[75] = db->GetType(0x4d513c7d);
		clcppTypePtrs[76] = db->GetType(0x500719b7);
		clcppTypePtrs[77] = db->GetType(0x50bfd472);
		clcppTypePtrs[78] = db->GetType(0x52bff521);
		clcppTypePtrs[79] = db->GetType(0x53f1b899);
		clcppTypePtrs[80] = db->GetType(0x54599b28);
		clcppTypePtrs[81] = db->GetType(0x54784e05);
		clcppTypePtrs[82] = db->GetType(0x55a81d81);
		clcppTypePtrs[83] = db->GetType(0x5674fd6e);
		clcppTypePtrs[84] = db->GetType(0x58410fc4);
		clcppTypePtrs[85] = db->GetType(0x58fbcb8e);
		clcppTypePtrs[86] = db->GetType(0x5907e96c);
		clcppTypePtrs[87] = db->GetType(0x5960c80d);
		clcppTypePtrs[88] = db->GetType(0x5a650d5a);
		clcppTypePtrs[89] = db->GetType(0x5bd9b7b0);
		clcppTypePtrs[90] = db->GetType(0x5e2c74ee);
		clcppTypePtrs[91] = db->GetType(0x5f3d4501);
		clcppTypePtrs[92] = db->GetType(0x5f963df8);
		clcppTypePtrs[93] = db->GetType(0x62e9a6f6);
		clcppTypePtrs[94] = db->GetType(0x63b8a024);
		clcppTypePtrs[95] = db->GetType(0x64fd1a64);
		clcppTypePtrs[96] = db->GetType(0x660c38dc);
		clcppTypePtrs[97] = db->GetType(0x67cc5df6);
		clcppTypePtrs[98] = db->GetType(0x68ddc1ba);
		clcppTypePtrs[99] = db->GetType(0x69825cdb);
		clcppTypePtrs[100] = db->GetType(0x6ae3dcec);
		clcppTypePtrs[101] = db->GetType(0x6b176739);
		clcppTypePtrs[102] = db->GetType(0x6c412685);
		clcppTypePtrs[103] = db->GetType(0x6c5ace61);
		clcppTypePtrs[104] = db->GetType(0x6df382f3);
		clcppTypePtrs[105] = db->GetType(0x6e65402b);
		clcppTypePtrs[106] = db->GetType(0x6eed04a9);
		clcppTypePtrs[107] = db->GetType(0x718c990a);
		clcppTypePtrs[108] = db->GetType(0x71c19d61);
		clcppTypePtrs[109] = db->GetType(0x71ea177f);
		clcppTypePtrs[110] = db->GetType(0x7316ba62);
		clcppTypePtrs[111] = db->GetType(0x75fa65df);
		clcppTypePtrs[112] = db->GetType(0x75fc2997);
		clcppTypePtrs[113] = db->GetType(0x761b4d0a);
		clcppTypePtrs[114] = db->GetType(0x763db508);
		clcppTypePtrs[115] = db->GetType(0x77183414);
		clcppTypePtrs[116] = db->GetType(0x7993419b);
		clcppTypePtrs[117] = db->GetType(0x7a510bcb);
		clcppTypePtrs[118] = db->GetType(0x7a74c61a);
		clcppTypePtrs[119] = db->GetType(0x7a82c6c5);
		clcppTypePtrs[120] = db->GetType(0x7b973c21);
		clcppTypePtrs[121] = db->GetType(0x7c014188);
		clcppTypePtrs[122] = db->GetType(0x7d3cc62f);
		clcppTypePtrs[123] = db->GetType(0x8058dd86);
		clcppTypePtrs[124] = db->GetType(0x823c5b2e);
		clcppTypePtrs[125] = db->GetType(0x825a01aa);
		clcppTypePtrs[126] = db->GetType(0x8280b379);
		clcppTypePtrs[127] = db->GetType(0x8367ad83);
		clcppTypePtrs[128] = db->GetType(0x83b84fd1);
		clcppTypePtrs[129] = db->GetType(0x85a5826f);
		clcppTypePtrs[130] = db->GetType(0x8908f9e9);
		clcppTypePtrs[131] = db->GetType(0x89c67a52);
		clcppTypePtrs[132] = db->GetType(0x8bbdf226);
		clcppTypePtrs[133] = db->GetType(0x8d7fd23d);
		clcppTypePtrs[134] = db->GetType(0x8e7a6923);
		clcppTypePtrs[135] = db->GetType(0x8f431602);
		clcppTypePtrs[136] = db->GetType(0x8f4e1ede);
		clcppTypePtrs[137] = db->GetType(0x8f6e4155);
		clcppTypePtrs[138] = db->GetType(0x8f8ef2f5);
		clcppTypePtrs[139] = db->GetType(0x90646e75);
		clcppTypePtrs[140] = db->GetType(0x90c9d9b6);
		clcppTypePtrs[141] = db->GetType(0x91878ac6);
		clcppTypePtrs[142] = db->GetType(0x926096a7);
		clcppTypePtrs[143] = db->GetType(0x938da972);
		clcppTypePtrs[144] = db->GetType(0x956a7ffb);
		clcppTypePtrs[145] = db->GetType(0x980393fc);
		clcppTypePtrs[146] = db->GetType(0x9979dbb8);
		clcppTypePtrs[147] = db->GetType(0x9a3880ca);
		clcppTypePtrs[148] = db->GetType(0x9bff9205);
		clcppTypePtrs[149] = db->GetType(0x9c7cd47c);
		clcppTypePtrs[150] = db->GetType(0x9d993a59);
		clcppTypePtrs[151] = db->GetType(0x9eaa7a80);
		clcppTypePtrs[152] = db->GetType(0xa01155f5);
		clcppTypePtrs[153] = db->GetType(0xa092f444);
		clcppTypePtrs[154] = db->GetType(0xa0c726c9);
		clcppTypePtrs[155] = db->GetType(0xa171344d);
		clcppTypePtrs[156] = db->GetType(0xa19bef49);
		clcppTypePtrs[157] = db->GetType(0xa1f90a55);
		clcppTypePtrs[158] = db->GetType(0xa23c3c25);
		clcppTypePtrs[159] = db->GetType(0xa366c350);
		clcppTypePtrs[160] = db->GetType(0xa5628f5b);
		clcppTypePtrs[161] = db->GetType(0xa9103cce);
		clcppTypePtrs[162] = db->GetType(0xa9e07b1a);
		clcppTypePtrs[163] = db->GetType(0xab03ca94);
		clcppTypePtrs[164] = db->GetType(0xaed2af7a);
		clcppTypePtrs[165] = db->GetType(0xb092ee75);
		clcppTypePtrs[166] = db->GetType(0xb1097e0f);
		clcppTypePtrs[167] = db->GetType(0xb1be1474);
		clcppTypePtrs[168] = db->GetType(0xb26eafef);
		clcppTypePtrs[169] = db->GetType(0xb282a46d);
		clcppTypePtrs[170] = db->GetType(0xb37618e9);
		clcppTypePtrs[171] = db->GetType(0xb53b9942);
		clcppTypePtrs[172] = db->GetType(0xb570786d);
		clcppTypePtrs[173] = db->GetType(0xb84b3f48);
		clcppTypePtrs[174] = db->GetType(0xb974edd7);
		clcppTypePtrs[175] = db->GetType(0xbc985ee4);
		clcppTypePtrs[176] = db->GetType(0xbcc19270);
		clcppTypePtrs[177] = db->GetType(0xbd3e34c4);
		clcppTypePtrs[178] = db->GetType(0xbf2b7493);
		clcppTypePtrs[179] = db->GetType(0xc02c4b10);
		clcppTypePtrs[180] = db->GetType(0xc4a9762a);
		clcppTypePtrs[181] = db->GetType(0xc4d8c8e4);
		clcppTypePtrs[182] = db->GetType(0xc4e4084a);
		clcppTypePtrs[183] = db->GetType(0xc7018595);
		clcppTypePtrs[184] = db->GetType(0xc776f191);
		clcppTypePtrs[185] = db->GetType(0xc9ece96f);
		clcppTypePtrs[186] = db->GetType(0xca1beb9f);
		clcppTypePtrs[187] = db->GetType(0xca35685b);
		clcppTypePtrs[188] = db->GetType(0xcac91e11);
		clcppTypePtrs[189] = db->GetType(0xcc14ff16);
		clcppTypePtrs[190] = db->GetType(0xcc477ac8);
		clcppTypePtrs[191] = db->GetType(0xcd89c68c);
		clcppTypePtrs[192] = db->GetType(0xcfb8df5d);
		clcppTypePtrs[193] = db->GetType(0xcfec08ae);
		clcppTypePtrs[194] = db->GetType(0xd371a678);
		clcppTypePtrs[195] = db->GetType(0xd7199f49);
		clcppTypePtrs[196] = db->GetType(0xd72d9105);
		clcppTypePtrs[197] = db->GetType(0xd777e004);
		clcppTypePtrs[198] = db->GetType(0xd85c112c);
		clcppTypePtrs[199] = db->GetType(0xd89ac106);
		clcppTypePtrs[200] = db->GetType(0xd94c8018);
		clcppTypePtrs[201] = db->GetType(0xd95e1fd8);
		clcppTypePtrs[202] = db->GetType(0xd98bf230);
		clcppTypePtrs[203] = db->GetType(0xda054820);
		clcppTypePtrs[204] = db->GetType(0xdaa271be);
		clcppTypePtrs[205] = db->GetType(0xdaa77a6b);
		clcppTypePtrs[206] = db->GetType(0xdae6cca0);
		clcppTypePtrs[207] = db->GetType(0xdb49d534);
		clcppTypePtrs[208] = db->GetType(0xdc3bd246);
		clcppTypePtrs[209] = db->GetType(0xdcef8cb1);
		clcppTypePtrs[210] = db->GetType(0xdda9d5fc);
		clcppTypePtrs[211] = db->GetType(0xddadff63);
		clcppTypePtrs[212] = db->GetType(0xde2407e8);
		clcppTypePtrs[213] = db->GetType(0xe0e66651);
		clcppTypePtrs[214] = db->GetType(0xe0fb1fea);
		clcppTypePtrs[215] = db->GetType(0xe0fdd22a);
		clcppTypePtrs[216] = db->GetType(0xe13d00e0);
		clcppTypePtrs[217] = db->GetType(0xe2cc7b2c);
		clcppTypePtrs[218] = db->GetType(0xe40ed5ca);
		clcppTypePtrs[219] = db->GetType(0xe42a5756);
		clcppTypePtrs[220] = db->GetType(0xe6579c0f);
		clcppTypePtrs[221] = db->GetType(0xe7a31e7c);
		clcppTypePtrs[222] = db->GetType(0xe7d8dd43);
		clcppTypePtrs[223] = db->GetType(0xe8a130eb);
		clcppTypePtrs[224] = db->GetType(0xe956b9f6);
		clcppTypePtrs[225] = db->GetType(0xeb5d01e8);
		clcppTypePtrs[226] = db->GetType(0xec48f37c);
		clcppTypePtrs[227] = db->GetType(0xec95029e);
		clcppTypePtrs[228] = db->GetType(0xef40f3df);
		clcppTypePtrs[229] = db->GetType(0xef4376cb);
		clcppTypePtrs[230] = db->GetType(0xef6b1e4c);
		clcppTypePtrs[231] = db->GetType(0xf0366608);
		clcppTypePtrs[232] = db->GetType(0xf2c2d50d);
		clcppTypePtrs[233] = db->GetType(0xf3893669);
		clcppTypePtrs[234] = db->GetType(0xf3a2d31c);
		clcppTypePtrs[235] = db->GetType(0xf488dba4);
		clcppTypePtrs[236] = db->GetType(0xf49dde76);
		clcppTypePtrs[237] = db->GetType(0xf4bd8b1b);
		clcppTypePtrs[238] = db->GetType(0xf58116ac);
		clcppTypePtrs[239] = db->GetType(0xf8814fab);
		clcppTypePtrs[240] = db->GetType(0xf8b67d84);
		clcppTypePtrs[241] = db->GetType(0xfa3a4a1b);
		clcppTypePtrs[242] = db->GetType(0xfa80d51a);
		clcppTypePtrs[243] = db->GetType(0xfb08e535);
		clcppTypePtrs[244] = db->GetType(0xfd1e3da1);
		clcppTypePtrs[245] = db->GetType(0x23cbeda2);
		clcppTypePtrs[246] = db->GetType(0x2daedc65);
		clcppTypePtrs[247] = db->GetType(0x431256b9);
		clcppTypePtrs[248] = db->GetType(0x5d45f8dd);
		clcppTypePtrs[249] = db->GetType(0x64ac9699);
		clcppTypePtrs[250] = db->GetType(0x7002de90);
		clcppTypePtrs[251] = db->GetType(0x774eb9ef);
		clcppTypePtrs[252] = db->GetType(0x7fd56a58);
		clcppTypePtrs[253] = db->GetType(0x8c51022a);
		clcppTypePtrs[254] = db->GetType(0xc87257f8);
		clcppTypePtrs[255] = db->GetType(0xce77be57);
		clcppTypePtrs[256] = db->GetType(0xd3046157);
		clcppTypePtrs[257] = db->GetType(0xdefeee53);
		clcppTypePtrs[258] = db->GetType(0xee0b3715);
		clcppTypePtrs[259] = db->GetType(0xf92c31f8);
		clcppTypePtrs[260] = db->GetType(0x73da4a);
		clcppTypePtrs[261] = db->GetType(0x815d47a);
		clcppTypePtrs[262] = db->GetType(0x311714bf);
		clcppTypePtrs[263] = db->GetType(0x34a7768f);
		clcppTypePtrs[264] = db->GetType(0x38da33ef);
		clcppTypePtrs[265] = db->GetType(0x49400eb8);
		clcppTypePtrs[266] = db->GetType(0x532220b8);
		clcppTypePtrs[267] = db->GetType(0x68e6d3ff);
		clcppTypePtrs[268] = db->GetType(0x8fd0d24a);
		clcppTypePtrs[269] = db->GetType(0x919d1bf1);
		clcppTypePtrs[270] = db->GetType(0x91ee210a);
		clcppTypePtrs[271] = db->GetType(0x95fb9fe8);
		clcppTypePtrs[272] = db->GetType(0xb7155e0b);
		clcppTypePtrs[273] = db->GetType(0xc058aa24);
		clcppTypePtrs[274] = db->GetType(0xce831ddf);
	}
}

// Forward declarations for all known types
namespace math
{
	struct Vector2;
	struct Vector3;
	struct Matrix2x2;
	struct Vector4;
	struct Quaternion;
	struct Matrix3x3;
	struct Matrix4x4;
}
namespace clcpp
{
	struct ContainerInfo;
	struct IAllocator;
	struct Enum;
	struct PrimitiveAttribute;
	struct Type;
	struct IFile;
	struct TextAttribute;
	struct IntAttribute;
	struct Primitive;
	struct Field;
	struct Attribute;
	struct Function;
	class Database;
	struct Qualifier;
	struct TemplateType;
	struct Name;
	struct EnumConstant;
	struct FloatAttribute;
	struct Template;
	struct FlagAttribute;
	struct Class;
	struct Namespace;
}
namespace dooms
{
	namespace time
	{
		class MainTimer;
		class Time_Server;
	}
	namespace graphics
	{
		#if defined(CLCPP_USING_MSVC)
		enum eUniformLocation;
		enum eUniformBlock_Global;
		enum eTextureBindingPoint;
		enum eVertexArrayFlag;
		#endif
		class Graphics_Server;
		class FrameBufferView;
		class OverlapBindChecker;
		class FrameBuffer;
		class LightManager;
		class DefferedRenderingFrameBuffer;
		class GraphicsAPIInput;
		struct PrimitiveTriangle;
		class UniformBufferObjectManager;
		class RenderingDebugger;
		class CullDistanceRenderer;
		class PicktureInPickture;
		class Buffer;
		class Material;
		class DebugDrawer;
		struct PrimitiveLine;
		class FixedMaterial;
		class CullDistance;
		class Mesh;
		class PIPManager;
		class MeshNode;
		class GraphicsAPILoader;
		class UniformBufferObjectUpdater;
		class BufferID;
		class DeferredRenderingDrawer;
		class RenderBuffer;
		class TextureView;
		class Renderer;
		class UniformBufferObject;
		enum class eColor;
	}
	namespace userinput
	{
		class UserInput_Server;
		enum class eKeyState;
		enum class eMouse_Button_Action;
	}
	namespace physics
	{
		class AABB2D;
		class AABB3D;
		class Physics_Setting;
		class Line;
		class Collider;
		class ColliderSolution;
		class Ray;
		class CapsuleCollider;
		class Sphere;
		class RenderCollider;
		class OBB;
		class Plane;
		class Physics_Server;
		class Circle2D;
		enum class ColliderType;
	}
	namespace reflection
	{
		class DType;
		class DPrimitive;
		class DEnum;
		class ReflectionManager;
		class DTemplateArgumentType;
		class DTemplateType;
		class DClass;
		class DField;
		class DAttributeList;
		struct Reflection_RandomAccessIterator;
		class DAttribute;
		class DFunction;
	}
	namespace random
	{
		class Random;
	}
	namespace asset
	{
		class TextureAsset;
		class FontAsset;
		class AssetContainer;
		class TextAsset;
		class Asset;
		class AudioAsset;
		class ShaderAsset;
		class ThreeDModelAsset;
		enum class eAssetType;
	}
	namespace assetImporter
	{
		class AssetFuture;
		class AssetImporterWorker_Texture;
		class AssetImporterWorker;
		class AssetImporterWorker_THREE_D_MODEL;
		class AssetImporterWorker_Audio;
		class AssetManager;
		class AssetImporterWorker_Shader;
		class AssetImporterWorker_Font;
		class AssetImporterWorkerManager;
		class AssetImporterWorker_Text;
	}
	namespace resource
	{
		class JobSystem;
		class Thread;
	}
	#if defined(CLCPP_USING_MSVC)
	enum TestEnum_ReflectionTest;
	enum eDObjectFlag;
	enum eRenderingFlag;
	enum eCameraFlag;
	enum eDOBJECT_ClassFlags;
	#endif
	class SmartDynamicLinking;
	class BoxCollider2D;
	class Ray;
	class CapsuleCollider3D;
	class PhysicsDebuggerController;
	class SharedScene;
	class EventSystem;
	class TestComponent;
	class BoxCollider3D;
	class Animation;
	class BulletComponent;
	class AxisDebugger;
	class TestComponent2;
	class WanderComponent;
	class OverDrawVisualizationDebugger;
	class ColliderComponent;
	class BoxAdder;
	class DObjectManager;
	class AutoRotate;
	class PortfolioComponent;
	class CircleCollider2D;
	class PerformanceTestController;
	class MeshData;
	class FrameDirtyChecker;
	class I_IndependentFromScene;
	class Move_WASD;
	class MeshCollider;
	struct Layer;
	class ReflectionTestComponent;
	class DirectionalLight;
	struct DObjectContructorParams;
	class SharedSceneSetting;
	class ViewFrustumCullingDebug;
	class Entity;
	class DeferredRenderingDebuggerController;
	class Rigidbody;
	class CharacterSpawner;
	class Animator;
	class ThreeDModelNode;
	class ButtonRotate;
	class PointLight;
	class Scene;
	class Camera;
	class Mesh;
	class RenderingAABBController;
	class ConfigData;
	class Light;
	class Collider2DComponent;
	class ExportTextureTester;
	class TestDObject;
	class Component;
	class FireBulletComponent;
	class AutoRotateAround;
	class Renderer;
	struct DynamicLinkingLibrary;
	class Collider3DComponent;
	class Transform;
	class GameCore;
	class IGameFlow;
	class ThreeDModelMesh;
	class MeshRenderer;
	class SphereCollider3D;
	class GCTestDObject;
	struct TestStruct_ReflectionTest;
	class DObject;
	struct AssetMetaData;
	enum class eSpace;
}
struct ImGuiIO;
struct ImGuiMetricsConfig;
struct ImBitVector;
struct ImGuiNavItemData;
struct ImColor;
struct ImGuiInputTextCallbackData;
struct ImGuiTableSettings;
struct ImGuiTableSortSpecs;
struct ImGuiStorage;
struct ImDrawList;
struct ImGuiInputTextState;
struct ImGuiOldColumns;
struct ImGuiTextBuffer;
struct ImGuiStackSizes;
struct ImGuiListClipper;
class DirtyReceiver;
struct ImGuiStyle;
struct aiImporterDesc;
struct __type_info_node;
struct IWICImagingFactory;
struct ImGuiTextFilter;
struct ImGuiPayload;
struct ImFontAtlas;
struct aiMetadata;
struct ImDrawChannel;
struct ImGuiGroupData;
struct ImGuiPopupData;
class DirtySender;
struct ImGuiContextHook;
struct ImGuiSizeCallbackData;
struct ImDrawListSharedData;
struct ImGuiNextItemData;
struct ImGuiMenuColumns;
struct GLFWwindow;
struct ImGuiTableColumnsSettings;
struct ImFontGlyph;
struct aiMesh;
struct ImGuiOldColumnData;
struct ImGuiStyleMod;
struct ImFontBuilderIO;
struct ImGuiTableTempData;
struct ImDrawData;
struct ImGuiDataTypeInfo;
struct ImGuiNextWindowData;
struct _IO_IRP_EXT_TRACK_OFFSET_HEADER;
struct ImGuiTabItem;
struct ImGuiSettingsHandler;
struct ImGuiLastItemData;
struct ImGuiWindow;
struct ImGuiTableColumn;
struct ImDrawListSplitter;
struct ImGuiContext;
struct ImGuiViewport;
struct ImDrawDataBuilder;
struct ImGuiTableColumnSortSpecs;
struct ImFontGlyphRangesBuilder;
struct ImGuiColorMod;
struct ImFont;
struct ImGuiWindowTempData;
struct ImDrawCmd;
struct ImGuiTabBar;
struct aiScene;
struct ImGuiWindowSettings;
struct ImGuiOnceUponAFrame;
struct ImRect;
struct ImVec4;
struct ImFontConfig;
struct ImDrawVert;
struct ImGuiTable;
struct IWICMetadataQueryReader;
struct aiNode;

// Specialisations for GetType and GetTypeNameHash
namespace clcpp
{
	template <> const Type* GetType< dooms::SmartDynamicLinking >() { return clcppTypePtrs[0]; }
	template <> unsigned int GetTypeNameHash< dooms::SmartDynamicLinking >() { return 0x5fd8d2d; }
	template <> const Type* GetType< dooms::BoxCollider2D >() { return clcppTypePtrs[1]; }
	template <> unsigned int GetTypeNameHash< dooms::BoxCollider2D >() { return 0x67532de; }
	template <> const Type* GetType< dooms::reflection::DType >() { return clcppTypePtrs[2]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DType >() { return 0x97c809e; }
	template <> const Type* GetType< dooms::Ray >() { return clcppTypePtrs[3]; }
	template <> unsigned int GetTypeNameHash< dooms::Ray >() { return 0x9a2d2ca; }
	template <> const Type* GetType< ::ImGuiIO >() { return clcppTypePtrs[4]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiIO >() { return 0xa179945; }
	template <> const Type* GetType< dooms::CapsuleCollider3D >() { return clcppTypePtrs[5]; }
	template <> unsigned int GetTypeNameHash< dooms::CapsuleCollider3D >() { return 0xa615da8; }
	template <> const Type* GetType< clcpp::ContainerInfo >() { return clcppTypePtrs[6]; }
	template <> unsigned int GetTypeNameHash< clcpp::ContainerInfo >() { return 0xb9bcc14; }
	template <> const Type* GetType< ::ImGuiMetricsConfig >() { return clcppTypePtrs[7]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiMetricsConfig >() { return 0xbed7cfc; }
	template <> const Type* GetType< dooms::assetImporter::AssetFuture >() { return clcppTypePtrs[8]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetFuture >() { return 0xc5aa46c; }
	template <> const Type* GetType< ::ImBitVector >() { return clcppTypePtrs[9]; }
	template <> unsigned int GetTypeNameHash< ::ImBitVector >() { return 0xfb7e02c; }
	template <> const Type* GetType< ::ImGuiNavItemData >() { return clcppTypePtrs[10]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiNavItemData >() { return 0x1063c692; }
	template <> const Type* GetType< dooms::physics::AABB2D >() { return clcppTypePtrs[11]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::AABB2D >() { return 0x125f434c; }
	template <> const Type* GetType< ::ImColor >() { return clcppTypePtrs[12]; }
	template <> unsigned int GetTypeNameHash< ::ImColor >() { return 0x145687e2; }
	template <> const Type* GetType< dooms::PhysicsDebuggerController >() { return clcppTypePtrs[13]; }
	template <> unsigned int GetTypeNameHash< dooms::PhysicsDebuggerController >() { return 0x14753a4f; }
	template <> const Type* GetType< dooms::random::Random >() { return clcppTypePtrs[14]; }
	template <> unsigned int GetTypeNameHash< dooms::random::Random >() { return 0x169b719d; }
	template <> const Type* GetType< dooms::graphics::Graphics_Server >() { return clcppTypePtrs[15]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::Graphics_Server >() { return 0x16f3a261; }
	template <> const Type* GetType< dooms::graphics::FrameBufferView >() { return clcppTypePtrs[16]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::FrameBufferView >() { return 0x186680c9; }
	template <> const Type* GetType< ::ImGuiInputTextCallbackData >() { return clcppTypePtrs[17]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiInputTextCallbackData >() { return 0x1910582a; }
	template <> const Type* GetType< dooms::SharedScene >() { return clcppTypePtrs[18]; }
	template <> unsigned int GetTypeNameHash< dooms::SharedScene >() { return 0x1ba086b8; }
	template <> const Type* GetType< dooms::graphics::OverlapBindChecker >() { return clcppTypePtrs[19]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::OverlapBindChecker >() { return 0x1d7a8b94; }
	template <> const Type* GetType< dooms::physics::AABB3D >() { return clcppTypePtrs[20]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::AABB3D >() { return 0x1e15a1e0; }
	template <> const Type* GetType< dooms::graphics::FrameBuffer >() { return clcppTypePtrs[21]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::FrameBuffer >() { return 0x1f19850a; }
	template <> const Type* GetType< dooms::EventSystem >() { return clcppTypePtrs[22]; }
	template <> unsigned int GetTypeNameHash< dooms::EventSystem >() { return 0x20436356; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorker_Texture >() { return clcppTypePtrs[23]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorker_Texture >() { return 0x24c8a7ae; }
	template <> const Type* GetType< ::ImGuiTableSettings >() { return clcppTypePtrs[24]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTableSettings >() { return 0x24e20d1a; }
	template <> const Type* GetType< ::ImGuiTableSortSpecs >() { return clcppTypePtrs[25]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTableSortSpecs >() { return 0x2519fdd3; }
	template <> const Type* GetType< ::ImGuiStorage >() { return clcppTypePtrs[26]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiStorage >() { return 0x266f2e4d; }
	template <> const Type* GetType< ::ImDrawList >() { return clcppTypePtrs[27]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawList >() { return 0x26ae2b99; }
	template <> const Type* GetType< clcpp::IAllocator >() { return clcppTypePtrs[28]; }
	template <> unsigned int GetTypeNameHash< clcpp::IAllocator >() { return 0x274dd6a8; }
	template <> const Type* GetType< dooms::userinput::UserInput_Server >() { return clcppTypePtrs[29]; }
	template <> unsigned int GetTypeNameHash< dooms::userinput::UserInput_Server >() { return 0x2778a408; }
	template <> const Type* GetType< dooms::TestComponent >() { return clcppTypePtrs[30]; }
	template <> unsigned int GetTypeNameHash< dooms::TestComponent >() { return 0x29aabd56; }
	template <> const Type* GetType< clcpp::Enum >() { return clcppTypePtrs[31]; }
	template <> unsigned int GetTypeNameHash< clcpp::Enum >() { return 0x2b46a30e; }
	template <> const Type* GetType< dooms::BoxCollider3D >() { return clcppTypePtrs[32]; }
	template <> unsigned int GetTypeNameHash< dooms::BoxCollider3D >() { return 0x2d776ba1; }
	template <> const Type* GetType< dooms::Animation >() { return clcppTypePtrs[33]; }
	template <> unsigned int GetTypeNameHash< dooms::Animation >() { return 0x2e8e891e; }
	template <> const Type* GetType< clcpp::PrimitiveAttribute >() { return clcppTypePtrs[34]; }
	template <> unsigned int GetTypeNameHash< clcpp::PrimitiveAttribute >() { return 0x2e9e1f59; }
	template <> const Type* GetType< dooms::BulletComponent >() { return clcppTypePtrs[35]; }
	template <> unsigned int GetTypeNameHash< dooms::BulletComponent >() { return 0x2ef7ed9e; }
	template <> const Type* GetType< dooms::asset::TextureAsset >() { return clcppTypePtrs[36]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::TextureAsset >() { return 0x2ffa1448; }
	template <> const Type* GetType< math::Vector2 >() { return clcppTypePtrs[37]; }
	template <> unsigned int GetTypeNameHash< math::Vector2 >() { return 0x307a1559; }
	template <> const Type* GetType< ::ImGuiInputTextState >() { return clcppTypePtrs[38]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiInputTextState >() { return 0x31180e43; }
	template <> const Type* GetType< dooms::physics::Physics_Setting >() { return clcppTypePtrs[39]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Physics_Setting >() { return 0x328e3300; }
	template <> const Type* GetType< dooms::AxisDebugger >() { return clcppTypePtrs[40]; }
	template <> unsigned int GetTypeNameHash< dooms::AxisDebugger >() { return 0x34e6130d; }
	template <> const Type* GetType< ::ImGuiOldColumns >() { return clcppTypePtrs[41]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiOldColumns >() { return 0x3506476e; }
	template <> const Type* GetType< ::ImGuiTextBuffer >() { return clcppTypePtrs[42]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTextBuffer >() { return 0x354624ca; }
	template <> const Type* GetType< dooms::TestComponent2 >() { return clcppTypePtrs[43]; }
	template <> unsigned int GetTypeNameHash< dooms::TestComponent2 >() { return 0x3657571a; }
	template <> const Type* GetType< dooms::WanderComponent >() { return clcppTypePtrs[44]; }
	template <> unsigned int GetTypeNameHash< dooms::WanderComponent >() { return 0x36f394dc; }
	template <> const Type* GetType< dooms::OverDrawVisualizationDebugger >() { return clcppTypePtrs[45]; }
	template <> unsigned int GetTypeNameHash< dooms::OverDrawVisualizationDebugger >() { return 0x37dd3f31; }
	template <> const Type* GetType< ::ImGuiStackSizes >() { return clcppTypePtrs[46]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiStackSizes >() { return 0x38d55358; }
	template <> const Type* GetType< dooms::ColliderComponent >() { return clcppTypePtrs[47]; }
	template <> unsigned int GetTypeNameHash< dooms::ColliderComponent >() { return 0x393cf179; }
	template <> const Type* GetType< dooms::graphics::LightManager >() { return clcppTypePtrs[48]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::LightManager >() { return 0x397547b2; }
	template <> const Type* GetType< dooms::reflection::DPrimitive >() { return clcppTypePtrs[49]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DPrimitive >() { return 0x39a843d9; }
	template <> const Type* GetType< dooms::reflection::DEnum >() { return clcppTypePtrs[50]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DEnum >() { return 0x39e598f9; }
	template <> const Type* GetType< clcpp::Type >() { return clcppTypePtrs[51]; }
	template <> unsigned int GetTypeNameHash< clcpp::Type >() { return 0x3a6c9e3f; }
	template <> const Type* GetType< ::ImGuiListClipper >() { return clcppTypePtrs[52]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiListClipper >() { return 0x3aaedfbb; }
	template <> const Type* GetType< dooms::BoxAdder >() { return clcppTypePtrs[53]; }
	template <> unsigned int GetTypeNameHash< dooms::BoxAdder >() { return 0x3b66e81d; }
	template <> const Type* GetType< dooms::physics::Line >() { return clcppTypePtrs[54]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Line >() { return 0x3c90b99d; }
	template <> const Type* GetType< clcpp::IFile >() { return clcppTypePtrs[55]; }
	template <> unsigned int GetTypeNameHash< clcpp::IFile >() { return 0x3c9a2a8f; }
	template <> const Type* GetType< clcpp::TextAttribute >() { return clcppTypePtrs[56]; }
	template <> unsigned int GetTypeNameHash< clcpp::TextAttribute >() { return 0x3e6d00ed; }
	template <> const Type* GetType< dooms::reflection::ReflectionManager >() { return clcppTypePtrs[57]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::ReflectionManager >() { return 0x3f4a8b5a; }
	template <> const Type* GetType< dooms::DObjectManager >() { return clcppTypePtrs[58]; }
	template <> unsigned int GetTypeNameHash< dooms::DObjectManager >() { return 0x3fdc0620; }
	template <> const Type* GetType< dooms::physics::Collider >() { return clcppTypePtrs[59]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Collider >() { return 0x3fe57f5f; }
	template <> const Type* GetType< ::DirtyReceiver >() { return clcppTypePtrs[60]; }
	template <> unsigned int GetTypeNameHash< ::DirtyReceiver >() { return 0x42c07598; }
	template <> const Type* GetType< dooms::graphics::DefferedRenderingFrameBuffer >() { return clcppTypePtrs[61]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::DefferedRenderingFrameBuffer >() { return 0x43842ded; }
	template <> const Type* GetType< clcpp::IntAttribute >() { return clcppTypePtrs[62]; }
	template <> unsigned int GetTypeNameHash< clcpp::IntAttribute >() { return 0x439b314d; }
	template <> const Type* GetType< ::ImGuiStyle >() { return clcppTypePtrs[63]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiStyle >() { return 0x44168f69; }
	template <> const Type* GetType< dooms::AutoRotate >() { return clcppTypePtrs[64]; }
	template <> unsigned int GetTypeNameHash< dooms::AutoRotate >() { return 0x4507615d; }
	template <> const Type* GetType< dooms::PortfolioComponent >() { return clcppTypePtrs[65]; }
	template <> unsigned int GetTypeNameHash< dooms::PortfolioComponent >() { return 0x450ebcac; }
	template <> const Type* GetType< ::aiImporterDesc >() { return clcppTypePtrs[66]; }
	template <> unsigned int GetTypeNameHash< ::aiImporterDesc >() { return 0x45b8ef4d; }
	template <> const Type* GetType< dooms::CircleCollider2D >() { return clcppTypePtrs[67]; }
	template <> unsigned int GetTypeNameHash< dooms::CircleCollider2D >() { return 0x45da4c2b; }
	template <> const Type* GetType< ::__type_info_node >() { return clcppTypePtrs[68]; }
	template <> unsigned int GetTypeNameHash< ::__type_info_node >() { return 0x46b4d2c2; }
	template <> const Type* GetType< dooms::reflection::DTemplateArgumentType >() { return clcppTypePtrs[69]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DTemplateArgumentType >() { return 0x4727c423; }
	template <> const Type* GetType< ::IWICImagingFactory >() { return clcppTypePtrs[70]; }
	template <> unsigned int GetTypeNameHash< ::IWICImagingFactory >() { return 0x47d7aa3c; }
	template <> const Type* GetType< clcpp::Primitive >() { return clcppTypePtrs[71]; }
	template <> unsigned int GetTypeNameHash< clcpp::Primitive >() { return 0x47dab4d0; }
	template <> const Type* GetType< dooms::PerformanceTestController >() { return clcppTypePtrs[72]; }
	template <> unsigned int GetTypeNameHash< dooms::PerformanceTestController >() { return 0x48696a01; }
	template <> const Type* GetType< ::ImGuiTextFilter >() { return clcppTypePtrs[73]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTextFilter >() { return 0x49f0da96; }
	template <> const Type* GetType< dooms::MeshData >() { return clcppTypePtrs[74]; }
	template <> unsigned int GetTypeNameHash< dooms::MeshData >() { return 0x4d2588ad; }
	template <> const Type* GetType< math::Vector3 >() { return clcppTypePtrs[75]; }
	template <> unsigned int GetTypeNameHash< math::Vector3 >() { return 0x4d513c7d; }
	template <> const Type* GetType< clcpp::Field >() { return clcppTypePtrs[76]; }
	template <> unsigned int GetTypeNameHash< clcpp::Field >() { return 0x500719b7; }
	template <> const Type* GetType< ::ImGuiPayload >() { return clcppTypePtrs[77]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiPayload >() { return 0x50bfd472; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorker >() { return clcppTypePtrs[78]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorker >() { return 0x52bff521; }
	template <> const Type* GetType< dooms::FrameDirtyChecker >() { return clcppTypePtrs[79]; }
	template <> unsigned int GetTypeNameHash< dooms::FrameDirtyChecker >() { return 0x53f1b899; }
	template <> const Type* GetType< dooms::I_IndependentFromScene >() { return clcppTypePtrs[80]; }
	template <> unsigned int GetTypeNameHash< dooms::I_IndependentFromScene >() { return 0x54599b28; }
	template <> const Type* GetType< dooms::graphics::GraphicsAPIInput >() { return clcppTypePtrs[81]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::GraphicsAPIInput >() { return 0x54784e05; }
	template <> const Type* GetType< clcpp::Attribute >() { return clcppTypePtrs[82]; }
	template <> unsigned int GetTypeNameHash< clcpp::Attribute >() { return 0x55a81d81; }
	template <> const Type* GetType< ::ImFontAtlas >() { return clcppTypePtrs[83]; }
	template <> unsigned int GetTypeNameHash< ::ImFontAtlas >() { return 0x5674fd6e; }
	template <> const Type* GetType< ::aiMetadata >() { return clcppTypePtrs[84]; }
	template <> unsigned int GetTypeNameHash< ::aiMetadata >() { return 0x58410fc4; }
	template <> const Type* GetType< clcpp::Function >() { return clcppTypePtrs[85]; }
	template <> unsigned int GetTypeNameHash< clcpp::Function >() { return 0x58fbcb8e; }
	template <> const Type* GetType< ::ImDrawChannel >() { return clcppTypePtrs[86]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawChannel >() { return 0x5907e96c; }
	template <> const Type* GetType< clcpp::Database >() { return clcppTypePtrs[87]; }
	template <> unsigned int GetTypeNameHash< clcpp::Database >() { return 0x5960c80d; }
	template <> const Type* GetType< ::ImGuiGroupData >() { return clcppTypePtrs[88]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiGroupData >() { return 0x5a650d5a; }
	template <> const Type* GetType< dooms::reflection::DTemplateType >() { return clcppTypePtrs[89]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DTemplateType >() { return 0x5bd9b7b0; }
	template <> const Type* GetType< clcpp::Qualifier >() { return clcppTypePtrs[90]; }
	template <> unsigned int GetTypeNameHash< clcpp::Qualifier >() { return 0x5e2c74ee; }
	template <> const Type* GetType< ::ImGuiPopupData >() { return clcppTypePtrs[91]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiPopupData >() { return 0x5f3d4501; }
	template <> const Type* GetType< dooms::reflection::DClass >() { return clcppTypePtrs[92]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DClass >() { return 0x5f963df8; }
	template <> const Type* GetType< dooms::resource::JobSystem >() { return clcppTypePtrs[93]; }
	template <> unsigned int GetTypeNameHash< dooms::resource::JobSystem >() { return 0x62e9a6f6; }
	template <> const Type* GetType< dooms::graphics::PrimitiveTriangle >() { return clcppTypePtrs[94]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::PrimitiveTriangle >() { return 0x63b8a024; }
	template <> const Type* GetType< ::DirtySender >() { return clcppTypePtrs[95]; }
	template <> unsigned int GetTypeNameHash< ::DirtySender >() { return 0x64fd1a64; }
	template <> const Type* GetType< dooms::graphics::UniformBufferObjectManager >() { return clcppTypePtrs[96]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::UniformBufferObjectManager >() { return 0x660c38dc; }
	template <> const Type* GetType< dooms::Move_WASD >() { return clcppTypePtrs[97]; }
	template <> unsigned int GetTypeNameHash< dooms::Move_WASD >() { return 0x67cc5df6; }
	template <> const Type* GetType< ::ImGuiContextHook >() { return clcppTypePtrs[98]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiContextHook >() { return 0x68ddc1ba; }
	template <> const Type* GetType< ::ImGuiSizeCallbackData >() { return clcppTypePtrs[99]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiSizeCallbackData >() { return 0x69825cdb; }
	template <> const Type* GetType< dooms::MeshCollider >() { return clcppTypePtrs[100]; }
	template <> unsigned int GetTypeNameHash< dooms::MeshCollider >() { return 0x6ae3dcec; }
	template <> const Type* GetType< dooms::asset::FontAsset >() { return clcppTypePtrs[101]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::FontAsset >() { return 0x6b176739; }
	template <> const Type* GetType< dooms::Layer >() { return clcppTypePtrs[102]; }
	template <> unsigned int GetTypeNameHash< dooms::Layer >() { return 0x6c412685; }
	template <> const Type* GetType< dooms::ReflectionTestComponent >() { return clcppTypePtrs[103]; }
	template <> unsigned int GetTypeNameHash< dooms::ReflectionTestComponent >() { return 0x6c5ace61; }
	template <> const Type* GetType< clcpp::TemplateType >() { return clcppTypePtrs[104]; }
	template <> unsigned int GetTypeNameHash< clcpp::TemplateType >() { return 0x6df382f3; }
	template <> const Type* GetType< dooms::DirectionalLight >() { return clcppTypePtrs[105]; }
	template <> unsigned int GetTypeNameHash< dooms::DirectionalLight >() { return 0x6e65402b; }
	template <> const Type* GetType< ::ImDrawListSharedData >() { return clcppTypePtrs[106]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawListSharedData >() { return 0x6eed04a9; }
	template <> const Type* GetType< ::ImGuiNextItemData >() { return clcppTypePtrs[107]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiNextItemData >() { return 0x718c990a; }
	template <> const Type* GetType< dooms::DObjectContructorParams >() { return clcppTypePtrs[108]; }
	template <> unsigned int GetTypeNameHash< dooms::DObjectContructorParams >() { return 0x71c19d61; }
	template <> const Type* GetType< ::ImGuiMenuColumns >() { return clcppTypePtrs[109]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiMenuColumns >() { return 0x71ea177f; }
	template <> const Type* GetType< dooms::graphics::RenderingDebugger >() { return clcppTypePtrs[110]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::RenderingDebugger >() { return 0x7316ba62; }
	template <> const Type* GetType< ::GLFWwindow >() { return clcppTypePtrs[111]; }
	template <> unsigned int GetTypeNameHash< ::GLFWwindow >() { return 0x75fa65df; }
	template <> const Type* GetType< dooms::SharedSceneSetting >() { return clcppTypePtrs[112]; }
	template <> unsigned int GetTypeNameHash< dooms::SharedSceneSetting >() { return 0x75fc2997; }
	template <> const Type* GetType< dooms::ViewFrustumCullingDebug >() { return clcppTypePtrs[113]; }
	template <> unsigned int GetTypeNameHash< dooms::ViewFrustumCullingDebug >() { return 0x761b4d0a; }
	template <> const Type* GetType< dooms::Entity >() { return clcppTypePtrs[114]; }
	template <> unsigned int GetTypeNameHash< dooms::Entity >() { return 0x763db508; }
	template <> const Type* GetType< dooms::reflection::DField >() { return clcppTypePtrs[115]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DField >() { return 0x77183414; }
	template <> const Type* GetType< dooms::physics::ColliderSolution >() { return clcppTypePtrs[116]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::ColliderSolution >() { return 0x7993419b; }
	template <> const Type* GetType< dooms::asset::AssetContainer >() { return clcppTypePtrs[117]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::AssetContainer >() { return 0x7a510bcb; }
	template <> const Type* GetType< ::ImGuiTableColumnsSettings >() { return clcppTypePtrs[118]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTableColumnsSettings >() { return 0x7a74c61a; }
	template <> const Type* GetType< dooms::physics::Ray >() { return clcppTypePtrs[119]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Ray >() { return 0x7a82c6c5; }
	template <> const Type* GetType< ::ImFontGlyph >() { return clcppTypePtrs[120]; }
	template <> unsigned int GetTypeNameHash< ::ImFontGlyph >() { return 0x7b973c21; }
	template <> const Type* GetType< dooms::graphics::CullDistanceRenderer >() { return clcppTypePtrs[121]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::CullDistanceRenderer >() { return 0x7c014188; }
	template <> const Type* GetType< dooms::physics::CapsuleCollider >() { return clcppTypePtrs[122]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::CapsuleCollider >() { return 0x7d3cc62f; }
	template <> const Type* GetType< dooms::DeferredRenderingDebuggerController >() { return clcppTypePtrs[123]; }
	template <> unsigned int GetTypeNameHash< dooms::DeferredRenderingDebuggerController >() { return 0x8058dd86; }
	template <> const Type* GetType< math::Matrix2x2 >() { return clcppTypePtrs[124]; }
	template <> unsigned int GetTypeNameHash< math::Matrix2x2 >() { return 0x823c5b2e; }
	template <> const Type* GetType< dooms::physics::Sphere >() { return clcppTypePtrs[125]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Sphere >() { return 0x825a01aa; }
	template <> const Type* GetType< dooms::Rigidbody >() { return clcppTypePtrs[126]; }
	template <> unsigned int GetTypeNameHash< dooms::Rigidbody >() { return 0x8280b379; }
	template <> const Type* GetType< dooms::graphics::PicktureInPickture >() { return clcppTypePtrs[127]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::PicktureInPickture >() { return 0x8367ad83; }
	template <> const Type* GetType< dooms::CharacterSpawner >() { return clcppTypePtrs[128]; }
	template <> unsigned int GetTypeNameHash< dooms::CharacterSpawner >() { return 0x83b84fd1; }
	template <> const Type* GetType< ::aiMesh >() { return clcppTypePtrs[129]; }
	template <> unsigned int GetTypeNameHash< ::aiMesh >() { return 0x85a5826f; }
	template <> const Type* GetType< ::ImGuiOldColumnData >() { return clcppTypePtrs[130]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiOldColumnData >() { return 0x8908f9e9; }
	template <> const Type* GetType< dooms::Animator >() { return clcppTypePtrs[131]; }
	template <> unsigned int GetTypeNameHash< dooms::Animator >() { return 0x89c67a52; }
	template <> const Type* GetType< dooms::ThreeDModelNode >() { return clcppTypePtrs[132]; }
	template <> unsigned int GetTypeNameHash< dooms::ThreeDModelNode >() { return 0x8bbdf226; }
	template <> const Type* GetType< dooms::graphics::Buffer >() { return clcppTypePtrs[133]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::Buffer >() { return 0x8d7fd23d; }
	template <> const Type* GetType< dooms::reflection::DAttributeList >() { return clcppTypePtrs[134]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DAttributeList >() { return 0x8e7a6923; }
	template <> const Type* GetType< dooms::ButtonRotate >() { return clcppTypePtrs[135]; }
	template <> unsigned int GetTypeNameHash< dooms::ButtonRotate >() { return 0x8f431602; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorker_THREE_D_MODEL >() { return clcppTypePtrs[136]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorker_THREE_D_MODEL >() { return 0x8f4e1ede; }
	template <> const Type* GetType< ::ImGuiStyleMod >() { return clcppTypePtrs[137]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiStyleMod >() { return 0x8f6e4155; }
	template <> const Type* GetType< dooms::physics::RenderCollider >() { return clcppTypePtrs[138]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::RenderCollider >() { return 0x8f8ef2f5; }
	template <> const Type* GetType< dooms::PointLight >() { return clcppTypePtrs[139]; }
	template <> unsigned int GetTypeNameHash< dooms::PointLight >() { return 0x90646e75; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorker_Audio >() { return clcppTypePtrs[140]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorker_Audio >() { return 0x90c9d9b6; }
	template <> const Type* GetType< ::ImFontBuilderIO >() { return clcppTypePtrs[141]; }
	template <> unsigned int GetTypeNameHash< ::ImFontBuilderIO >() { return 0x91878ac6; }
	template <> const Type* GetType< ::ImGuiTableTempData >() { return clcppTypePtrs[142]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTableTempData >() { return 0x926096a7; }
	template <> const Type* GetType< dooms::assetImporter::AssetManager >() { return clcppTypePtrs[143]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetManager >() { return 0x938da972; }
	template <> const Type* GetType< dooms::Scene >() { return clcppTypePtrs[144]; }
	template <> unsigned int GetTypeNameHash< dooms::Scene >() { return 0x956a7ffb; }
	template <> const Type* GetType< dooms::Camera >() { return clcppTypePtrs[145]; }
	template <> unsigned int GetTypeNameHash< dooms::Camera >() { return 0x980393fc; }
	template <> const Type* GetType< clcpp::Name >() { return clcppTypePtrs[146]; }
	template <> unsigned int GetTypeNameHash< clcpp::Name >() { return 0x9979dbb8; }
	template <> const Type* GetType< clcpp::EnumConstant >() { return clcppTypePtrs[147]; }
	template <> unsigned int GetTypeNameHash< clcpp::EnumConstant >() { return 0x9a3880ca; }
	template <> const Type* GetType< dooms::graphics::Material >() { return clcppTypePtrs[148]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::Material >() { return 0x9bff9205; }
	template <> const Type* GetType< dooms::graphics::DebugDrawer >() { return clcppTypePtrs[149]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::DebugDrawer >() { return 0x9c7cd47c; }
	template <> const Type* GetType< dooms::Mesh >() { return clcppTypePtrs[150]; }
	template <> unsigned int GetTypeNameHash< dooms::Mesh >() { return 0x9d993a59; }
	template <> const Type* GetType< ::ImDrawData >() { return clcppTypePtrs[151]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawData >() { return 0x9eaa7a80; }
	template <> const Type* GetType< dooms::RenderingAABBController >() { return clcppTypePtrs[152]; }
	template <> unsigned int GetTypeNameHash< dooms::RenderingAABBController >() { return 0xa01155f5; }
	template <> const Type* GetType< ::ImGuiDataTypeInfo >() { return clcppTypePtrs[153]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiDataTypeInfo >() { return 0xa092f444; }
	template <> const Type* GetType< dooms::reflection::Reflection_RandomAccessIterator >() { return clcppTypePtrs[154]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::Reflection_RandomAccessIterator >() { return 0xa0c726c9; }
	template <> const Type* GetType< ::ImGuiNextWindowData >() { return clcppTypePtrs[155]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiNextWindowData >() { return 0xa171344d; }
	template <> const Type* GetType< dooms::asset::TextAsset >() { return clcppTypePtrs[156]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::TextAsset >() { return 0xa19bef49; }
	template <> const Type* GetType< ::_IO_IRP_EXT_TRACK_OFFSET_HEADER >() { return clcppTypePtrs[157]; }
	template <> unsigned int GetTypeNameHash< ::_IO_IRP_EXT_TRACK_OFFSET_HEADER >() { return 0xa1f90a55; }
	template <> const Type* GetType< dooms::ConfigData >() { return clcppTypePtrs[158]; }
	template <> unsigned int GetTypeNameHash< dooms::ConfigData >() { return 0xa23c3c25; }
	template <> const Type* GetType< dooms::Light >() { return clcppTypePtrs[159]; }
	template <> unsigned int GetTypeNameHash< dooms::Light >() { return 0xa366c350; }
	template <> const Type* GetType< dooms::graphics::PrimitiveLine >() { return clcppTypePtrs[160]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::PrimitiveLine >() { return 0xa5628f5b; }
	template <> const Type* GetType< dooms::Collider2DComponent >() { return clcppTypePtrs[161]; }
	template <> unsigned int GetTypeNameHash< dooms::Collider2DComponent >() { return 0xa9103cce; }
	template <> const Type* GetType< ::ImGuiTabItem >() { return clcppTypePtrs[162]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTabItem >() { return 0xa9e07b1a; }
	template <> const Type* GetType< dooms::ExportTextureTester >() { return clcppTypePtrs[163]; }
	template <> unsigned int GetTypeNameHash< dooms::ExportTextureTester >() { return 0xab03ca94; }
	template <> const Type* GetType< clcpp::FloatAttribute >() { return clcppTypePtrs[164]; }
	template <> unsigned int GetTypeNameHash< clcpp::FloatAttribute >() { return 0xaed2af7a; }
	template <> const Type* GetType< ::ImGuiSettingsHandler >() { return clcppTypePtrs[165]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiSettingsHandler >() { return 0xb092ee75; }
	template <> const Type* GetType< math::Vector4 >() { return clcppTypePtrs[166]; }
	template <> unsigned int GetTypeNameHash< math::Vector4 >() { return 0xb1097e0f; }
	template <> const Type* GetType< dooms::asset::Asset >() { return clcppTypePtrs[167]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::Asset >() { return 0xb1be1474; }
	template <> const Type* GetType< ::ImGuiLastItemData >() { return clcppTypePtrs[168]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiLastItemData >() { return 0xb26eafef; }
	template <> const Type* GetType< dooms::physics::OBB >() { return clcppTypePtrs[169]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::OBB >() { return 0xb282a46d; }
	template <> const Type* GetType< dooms::TestDObject >() { return clcppTypePtrs[170]; }
	template <> unsigned int GetTypeNameHash< dooms::TestDObject >() { return 0xb37618e9; }
	template <> const Type* GetType< dooms::Component >() { return clcppTypePtrs[171]; }
	template <> unsigned int GetTypeNameHash< dooms::Component >() { return 0xb53b9942; }
	template <> const Type* GetType< ::ImGuiWindow >() { return clcppTypePtrs[172]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiWindow >() { return 0xb570786d; }
	template <> const Type* GetType< ::ImGuiTableColumn >() { return clcppTypePtrs[173]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTableColumn >() { return 0xb84b3f48; }
	template <> const Type* GetType< dooms::FireBulletComponent >() { return clcppTypePtrs[174]; }
	template <> unsigned int GetTypeNameHash< dooms::FireBulletComponent >() { return 0xb974edd7; }
	template <> const Type* GetType< ::ImDrawListSplitter >() { return clcppTypePtrs[175]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawListSplitter >() { return 0xbc985ee4; }
	template <> const Type* GetType< dooms::AutoRotateAround >() { return clcppTypePtrs[176]; }
	template <> unsigned int GetTypeNameHash< dooms::AutoRotateAround >() { return 0xbcc19270; }
	template <> const Type* GetType< dooms::resource::Thread >() { return clcppTypePtrs[177]; }
	template <> unsigned int GetTypeNameHash< dooms::resource::Thread >() { return 0xbd3e34c4; }
	template <> const Type* GetType< clcpp::Template >() { return clcppTypePtrs[178]; }
	template <> unsigned int GetTypeNameHash< clcpp::Template >() { return 0xbf2b7493; }
	template <> const Type* GetType< dooms::reflection::DAttribute >() { return clcppTypePtrs[179]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DAttribute >() { return 0xc02c4b10; }
	template <> const Type* GetType< dooms::graphics::FixedMaterial >() { return clcppTypePtrs[180]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::FixedMaterial >() { return 0xc4a9762a; }
	template <> const Type* GetType< dooms::asset::AudioAsset >() { return clcppTypePtrs[181]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::AudioAsset >() { return 0xc4d8c8e4; }
	template <> const Type* GetType< dooms::reflection::DFunction >() { return clcppTypePtrs[182]; }
	template <> unsigned int GetTypeNameHash< dooms::reflection::DFunction >() { return 0xc4e4084a; }
	template <> const Type* GetType< dooms::physics::Plane >() { return clcppTypePtrs[183]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Plane >() { return 0xc7018595; }
	template <> const Type* GetType< dooms::Renderer >() { return clcppTypePtrs[184]; }
	template <> unsigned int GetTypeNameHash< dooms::Renderer >() { return 0xc776f191; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorker_Shader >() { return clcppTypePtrs[185]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorker_Shader >() { return 0xc9ece96f; }
	template <> const Type* GetType< ::ImGuiContext >() { return clcppTypePtrs[186]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiContext >() { return 0xca1beb9f; }
	template <> const Type* GetType< dooms::graphics::CullDistance >() { return clcppTypePtrs[187]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::CullDistance >() { return 0xca35685b; }
	template <> const Type* GetType< ::ImGuiViewport >() { return clcppTypePtrs[188]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiViewport >() { return 0xcac91e11; }
	template <> const Type* GetType< dooms::graphics::Mesh >() { return clcppTypePtrs[189]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::Mesh >() { return 0xcc14ff16; }
	template <> const Type* GetType< dooms::DynamicLinkingLibrary >() { return clcppTypePtrs[190]; }
	template <> unsigned int GetTypeNameHash< dooms::DynamicLinkingLibrary >() { return 0xcc477ac8; }
	template <> const Type* GetType< ::ImDrawDataBuilder >() { return clcppTypePtrs[191]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawDataBuilder >() { return 0xcd89c68c; }
	template <> const Type* GetType< ::ImGuiTableColumnSortSpecs >() { return clcppTypePtrs[192]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTableColumnSortSpecs >() { return 0xcfb8df5d; }
	template <> const Type* GetType< ::ImFontGlyphRangesBuilder >() { return clcppTypePtrs[193]; }
	template <> unsigned int GetTypeNameHash< ::ImFontGlyphRangesBuilder >() { return 0xcfec08ae; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorker_Font >() { return clcppTypePtrs[194]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorker_Font >() { return 0xd371a678; }
	template <> const Type* GetType< dooms::Collider3DComponent >() { return clcppTypePtrs[195]; }
	template <> unsigned int GetTypeNameHash< dooms::Collider3DComponent >() { return 0xd7199f49; }
	template <> const Type* GetType< ::ImGuiColorMod >() { return clcppTypePtrs[196]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiColorMod >() { return 0xd72d9105; }
	template <> const Type* GetType< dooms::graphics::PIPManager >() { return clcppTypePtrs[197]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::PIPManager >() { return 0xd777e004; }
	template <> const Type* GetType< dooms::graphics::MeshNode >() { return clcppTypePtrs[198]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::MeshNode >() { return 0xd85c112c; }
	template <> const Type* GetType< dooms::graphics::GraphicsAPILoader >() { return clcppTypePtrs[199]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::GraphicsAPILoader >() { return 0xd89ac106; }
	template <> const Type* GetType< dooms::Transform >() { return clcppTypePtrs[200]; }
	template <> unsigned int GetTypeNameHash< dooms::Transform >() { return 0xd94c8018; }
	template <> const Type* GetType< dooms::time::MainTimer >() { return clcppTypePtrs[201]; }
	template <> unsigned int GetTypeNameHash< dooms::time::MainTimer >() { return 0xd95e1fd8; }
	template <> const Type* GetType< dooms::physics::Physics_Server >() { return clcppTypePtrs[202]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Physics_Server >() { return 0xd98bf230; }
	template <> const Type* GetType< dooms::GameCore >() { return clcppTypePtrs[203]; }
	template <> unsigned int GetTypeNameHash< dooms::GameCore >() { return 0xda054820; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorkerManager >() { return clcppTypePtrs[204]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorkerManager >() { return 0xdaa271be; }
	template <> const Type* GetType< dooms::IGameFlow >() { return clcppTypePtrs[205]; }
	template <> unsigned int GetTypeNameHash< dooms::IGameFlow >() { return 0xdaa77a6b; }
	template <> const Type* GetType< ::ImFont >() { return clcppTypePtrs[206]; }
	template <> unsigned int GetTypeNameHash< ::ImFont >() { return 0xdae6cca0; }
	template <> const Type* GetType< dooms::time::Time_Server >() { return clcppTypePtrs[207]; }
	template <> unsigned int GetTypeNameHash< dooms::time::Time_Server >() { return 0xdb49d534; }
	template <> const Type* GetType< ::ImGuiWindowTempData >() { return clcppTypePtrs[208]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiWindowTempData >() { return 0xdc3bd246; }
	template <> const Type* GetType< dooms::graphics::UniformBufferObjectUpdater >() { return clcppTypePtrs[209]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::UniformBufferObjectUpdater >() { return 0xdcef8cb1; }
	template <> const Type* GetType< math::Quaternion >() { return clcppTypePtrs[210]; }
	template <> unsigned int GetTypeNameHash< math::Quaternion >() { return 0xdda9d5fc; }
	template <> const Type* GetType< ::ImDrawCmd >() { return clcppTypePtrs[211]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawCmd >() { return 0xddadff63; }
	template <> const Type* GetType< dooms::graphics::BufferID >() { return clcppTypePtrs[212]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::BufferID >() { return 0xde2407e8; }
	template <> const Type* GetType< math::Matrix3x3 >() { return clcppTypePtrs[213]; }
	template <> unsigned int GetTypeNameHash< math::Matrix3x3 >() { return 0xe0e66651; }
	template <> const Type* GetType< dooms::ThreeDModelMesh >() { return clcppTypePtrs[214]; }
	template <> unsigned int GetTypeNameHash< dooms::ThreeDModelMesh >() { return 0xe0fb1fea; }
	template <> const Type* GetType< dooms::graphics::DeferredRenderingDrawer >() { return clcppTypePtrs[215]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::DeferredRenderingDrawer >() { return 0xe0fdd22a; }
	template <> const Type* GetType< dooms::MeshRenderer >() { return clcppTypePtrs[216]; }
	template <> unsigned int GetTypeNameHash< dooms::MeshRenderer >() { return 0xe13d00e0; }
	template <> const Type* GetType< dooms::SphereCollider3D >() { return clcppTypePtrs[217]; }
	template <> unsigned int GetTypeNameHash< dooms::SphereCollider3D >() { return 0xe2cc7b2c; }
	template <> const Type* GetType< ::ImGuiTabBar >() { return clcppTypePtrs[218]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTabBar >() { return 0xe40ed5ca; }
	template <> const Type* GetType< ::aiScene >() { return clcppTypePtrs[219]; }
	template <> unsigned int GetTypeNameHash< ::aiScene >() { return 0xe42a5756; }
	template <> const Type* GetType< dooms::GCTestDObject >() { return clcppTypePtrs[220]; }
	template <> unsigned int GetTypeNameHash< dooms::GCTestDObject >() { return 0xe6579c0f; }
	template <> const Type* GetType< clcpp::FlagAttribute >() { return clcppTypePtrs[221]; }
	template <> unsigned int GetTypeNameHash< clcpp::FlagAttribute >() { return 0xe7a31e7c; }
	template <> const Type* GetType< dooms::graphics::RenderBuffer >() { return clcppTypePtrs[222]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::RenderBuffer >() { return 0xe7d8dd43; }
	template <> const Type* GetType< ::ImGuiWindowSettings >() { return clcppTypePtrs[223]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiWindowSettings >() { return 0xe8a130eb; }
	template <> const Type* GetType< dooms::TestStruct_ReflectionTest >() { return clcppTypePtrs[224]; }
	template <> unsigned int GetTypeNameHash< dooms::TestStruct_ReflectionTest >() { return 0xe956b9f6; }
	template <> const Type* GetType< ::ImGuiOnceUponAFrame >() { return clcppTypePtrs[225]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiOnceUponAFrame >() { return 0xeb5d01e8; }
	template <> const Type* GetType< ::ImRect >() { return clcppTypePtrs[226]; }
	template <> unsigned int GetTypeNameHash< ::ImRect >() { return 0xec48f37c; }
	template <> const Type* GetType< dooms::DObject >() { return clcppTypePtrs[227]; }
	template <> unsigned int GetTypeNameHash< dooms::DObject >() { return 0xec95029e; }
	template <> const Type* GetType< ::ImVec4 >() { return clcppTypePtrs[228]; }
	template <> unsigned int GetTypeNameHash< ::ImVec4 >() { return 0xef40f3df; }
	template <> const Type* GetType< ::ImFontConfig >() { return clcppTypePtrs[229]; }
	template <> unsigned int GetTypeNameHash< ::ImFontConfig >() { return 0xef4376cb; }
	template <> const Type* GetType< dooms::AssetMetaData >() { return clcppTypePtrs[230]; }
	template <> unsigned int GetTypeNameHash< dooms::AssetMetaData >() { return 0xef6b1e4c; }
	template <> const Type* GetType< ::ImDrawVert >() { return clcppTypePtrs[231]; }
	template <> unsigned int GetTypeNameHash< ::ImDrawVert >() { return 0xf0366608; }
	template <> const Type* GetType< dooms::graphics::TextureView >() { return clcppTypePtrs[232]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::TextureView >() { return 0xf2c2d50d; }
	template <> const Type* GetType< dooms::asset::ShaderAsset >() { return clcppTypePtrs[233]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::ShaderAsset >() { return 0xf3893669; }
	template <> const Type* GetType< clcpp::Class >() { return clcppTypePtrs[234]; }
	template <> unsigned int GetTypeNameHash< clcpp::Class >() { return 0xf3a2d31c; }
	template <> const Type* GetType< clcpp::Namespace >() { return clcppTypePtrs[235]; }
	template <> unsigned int GetTypeNameHash< clcpp::Namespace >() { return 0xf488dba4; }
	template <> const Type* GetType< dooms::assetImporter::AssetImporterWorker_Text >() { return clcppTypePtrs[236]; }
	template <> unsigned int GetTypeNameHash< dooms::assetImporter::AssetImporterWorker_Text >() { return 0xf49dde76; }
	template <> const Type* GetType< dooms::graphics::Renderer >() { return clcppTypePtrs[237]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::Renderer >() { return 0xf4bd8b1b; }
	template <> const Type* GetType< dooms::physics::Circle2D >() { return clcppTypePtrs[238]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::Circle2D >() { return 0xf58116ac; }
	template <> const Type* GetType< ::ImGuiTable >() { return clcppTypePtrs[239]; }
	template <> unsigned int GetTypeNameHash< ::ImGuiTable >() { return 0xf8814fab; }
	template <> const Type* GetType< dooms::graphics::UniformBufferObject >() { return clcppTypePtrs[240]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::UniformBufferObject >() { return 0xf8b67d84; }
	template <> const Type* GetType< dooms::asset::ThreeDModelAsset >() { return clcppTypePtrs[241]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::ThreeDModelAsset >() { return 0xfa3a4a1b; }
	template <> const Type* GetType< ::IWICMetadataQueryReader >() { return clcppTypePtrs[242]; }
	template <> unsigned int GetTypeNameHash< ::IWICMetadataQueryReader >() { return 0xfa80d51a; }
	template <> const Type* GetType< ::aiNode >() { return clcppTypePtrs[243]; }
	template <> unsigned int GetTypeNameHash< ::aiNode >() { return 0xfb08e535; }
	template <> const Type* GetType< math::Matrix4x4 >() { return clcppTypePtrs[244]; }
	template <> unsigned int GetTypeNameHash< math::Matrix4x4 >() { return 0xfd1e3da1; }
	template <> const Type* GetType< dooms::physics::ColliderType >() { return clcppTypePtrs[245]; }
	template <> unsigned int GetTypeNameHash< dooms::physics::ColliderType >() { return 0x23cbeda2; }
	template <> const Type* GetType< dooms::userinput::eKeyState >() { return clcppTypePtrs[247]; }
	template <> unsigned int GetTypeNameHash< dooms::userinput::eKeyState >() { return 0x431256b9; }
	template <> const Type* GetType< dooms::userinput::eMouse_Button_Action >() { return clcppTypePtrs[248]; }
	template <> unsigned int GetTypeNameHash< dooms::userinput::eMouse_Button_Action >() { return 0x5d45f8dd; }
	template <> const Type* GetType< dooms::eSpace >() { return clcppTypePtrs[249]; }
	template <> unsigned int GetTypeNameHash< dooms::eSpace >() { return 0x64ac9699; }
	template <> const Type* GetType< dooms::asset::eAssetType >() { return clcppTypePtrs[252]; }
	template <> unsigned int GetTypeNameHash< dooms::asset::eAssetType >() { return 0x7fd56a58; }
	template <> const Type* GetType< dooms::graphics::eColor >() { return clcppTypePtrs[256]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::eColor >() { return 0xd3046157; }
	template <> const Type* GetType< void >() { return clcppTypePtrs[260]; }
	template <> unsigned int GetTypeNameHash< void >() { return 0x73da4a; }
	template <> const Type* GetType< unsigned long >() { return clcppTypePtrs[261]; }
	template <> unsigned int GetTypeNameHash< unsigned long >() { return 0x815d47a; }
	template <> const Type* GetType< wchar_t >() { return clcppTypePtrs[262]; }
	template <> unsigned int GetTypeNameHash< wchar_t >() { return 0x311714bf; }
	template <> const Type* GetType< short >() { return clcppTypePtrs[263]; }
	template <> unsigned int GetTypeNameHash< short >() { return 0x34a7768f; }
	template <> const Type* GetType< long >() { return clcppTypePtrs[264]; }
	template <> unsigned int GetTypeNameHash< long >() { return 0x38da33ef; }
	template <> const Type* GetType< unsigned char >() { return clcppTypePtrs[265]; }
	template <> unsigned int GetTypeNameHash< unsigned char >() { return 0x49400eb8; }
	template <> const Type* GetType< long long >() { return clcppTypePtrs[266]; }
	template <> unsigned int GetTypeNameHash< long long >() { return 0x532220b8; }
	template <> const Type* GetType< double >() { return clcppTypePtrs[267]; }
	template <> unsigned int GetTypeNameHash< double >() { return 0x68e6d3ff; }
	template <> const Type* GetType< bool >() { return clcppTypePtrs[268]; }
	template <> unsigned int GetTypeNameHash< bool >() { return 0x8fd0d24a; }
	template <> const Type* GetType< unsigned short >() { return clcppTypePtrs[269]; }
	template <> unsigned int GetTypeNameHash< unsigned short >() { return 0x919d1bf1; }
	template <> const Type* GetType< unsigned int >() { return clcppTypePtrs[270]; }
	template <> unsigned int GetTypeNameHash< unsigned int >() { return 0x91ee210a; }
	template <> const Type* GetType< float >() { return clcppTypePtrs[271]; }
	template <> unsigned int GetTypeNameHash< float >() { return 0x95fb9fe8; }
	template <> const Type* GetType< char >() { return clcppTypePtrs[272]; }
	template <> unsigned int GetTypeNameHash< char >() { return 0xb7155e0b; }
	template <> const Type* GetType< unsigned long long >() { return clcppTypePtrs[273]; }
	template <> unsigned int GetTypeNameHash< unsigned long long >() { return 0xc058aa24; }
	template <> const Type* GetType< int >() { return clcppTypePtrs[274]; }
	template <> unsigned int GetTypeNameHash< int >() { return 0xce831ddf; }
	#if defined(CLCPP_USING_MSVC)
	template <> const Type* GetType< dooms::graphics::eUniformLocation >() { return clcppTypePtrs[246]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::eUniformLocation >() { return 0x2daedc65; }
	template <> const Type* GetType< dooms::TestEnum_ReflectionTest >() { return clcppTypePtrs[250]; }
	template <> unsigned int GetTypeNameHash< dooms::TestEnum_ReflectionTest >() { return 0x7002de90; }
	template <> const Type* GetType< dooms::eDObjectFlag >() { return clcppTypePtrs[251]; }
	template <> unsigned int GetTypeNameHash< dooms::eDObjectFlag >() { return 0x774eb9ef; }
	template <> const Type* GetType< dooms::eRenderingFlag >() { return clcppTypePtrs[253]; }
	template <> unsigned int GetTypeNameHash< dooms::eRenderingFlag >() { return 0x8c51022a; }
	template <> const Type* GetType< dooms::graphics::eUniformBlock_Global >() { return clcppTypePtrs[254]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::eUniformBlock_Global >() { return 0xc87257f8; }
	template <> const Type* GetType< dooms::eCameraFlag >() { return clcppTypePtrs[255]; }
	template <> unsigned int GetTypeNameHash< dooms::eCameraFlag >() { return 0xce77be57; }
	template <> const Type* GetType< dooms::graphics::eTextureBindingPoint >() { return clcppTypePtrs[257]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::eTextureBindingPoint >() { return 0xdefeee53; }
	template <> const Type* GetType< dooms::eDOBJECT_ClassFlags >() { return clcppTypePtrs[258]; }
	template <> unsigned int GetTypeNameHash< dooms::eDOBJECT_ClassFlags >() { return 0xee0b3715; }
	template <> const Type* GetType< dooms::graphics::eVertexArrayFlag >() { return clcppTypePtrs[259]; }
	template <> unsigned int GetTypeNameHash< dooms::graphics::eVertexArrayFlag >() { return 0xf92c31f8; }
	#endif
}
